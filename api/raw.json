{"majorversion": 3, "classmap": {"ImageCropper": {"name": "ImageCropper", "configs": {"status": {"readonly": "", "type": "{Boolean}", "description": "Show the Resize and Drag utilities status", "guessedname": "status", "guessedtype": "property"}, "initialXY": {"default": "[10, 10]", "type": "{Array}", "description": "Array of the XY position that we need to set the crop element to when we build it", "guessedname": "initialXY", "guessedtype": "property"}, "resizeKnob": {"type": "{Node}", "description": "The resized element", "guessedname": "resizeKnob", "guessedtype": "property"}, "initHeight": {"type": "{Number}", "description": "Set the initlal height of the crop area, defaults to minHeight", "guessedname": "initHeight", "guessedtype": "property"}, "resizeMask": {"type": "{Node}", "description": "The resize mask used to highlight the crop area", "guessedname": "resizeMask", "guessedtype": "property"}, "minHeight": {"default": "50", "type": "{Number}", "description": "MinHeight of the crop area", "guessedname": "minHeight", "guessedtype": "property"}, "shiftKeyTick": {"default": "10", "type": "{Number}", "description": "The pixel tick for shift + the arrow keys", "guessedname": "shiftKeyTick", "guessedtype": "property"}, "minWidth": {"default": "50", "type": "{Number}", "description": "MinWidth of the crop area", "guessedname": "minWidth", "guessedtype": "property"}, "source": {"type": "{String}", "description": "The source attribute of the image we are cropping", "guessedname": "source", "guessedtype": "property"}, "cropMask": {"type": "{Node}", "description": "Element used to shadow the part of the image we're not cropping", "guessedname": "cropMask", "guessedtype": "property"}, "initWidth": {"type": "{Number}", "description": "Set the initlal width of the crop area, defaults to minWidth", "guessedname": "initWidth", "guessedtype": "property"}, "preserveRatio": {"default": "false", "type": "{Boolean}", "description": "Set the preserveRatio config option of the Resize Utlility", "guessedname": "preserveRatio", "guessedtype": "property"}, "keyTick": {"default": "1", "type": "{Number}", "description": "The pixel tick for the arrow keys", "guessedname": "keyTick", "guessedtype": "property"}, "useKeys": {"default": "true", "type": "{Boolean}", "description": "Should we use the Arrow keys to position the crop element", "guessedname": "useKeys", "guessedtype": "property"}}, "constructors": [{"params": [{"type": "Object", "name": "config", "description": " Object literal containing configuration parameters."}], "description": "<p>Creates a Image Cropper control.</p>"}], "namespace": "", "module": "imagecropper", "events": {"cropMaskChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "cropMaskChange", "description": "Fires when the value for the configuration attribute 'cropMask' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "initWidthChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "initWidthChange", "description": "Fires when the value for the configuration attribute 'initWidth' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "sourceChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "sourceChange", "description": "Fires when the value for the configuration attribute 'source' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "preserveRatioChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "preserveRatioChange", "description": "Fires when the value for the configuration attribute 'preserveRatio' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "minHeightChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "minHeightChange", "description": "Fires when the value for the configuration attribute 'minHeight' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "resizeMaskChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "resizeMaskChange", "description": "Fires when the value for the configuration attribute 'resizeMask' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "crop:start": {"type": "{CustomEvent}", "params": [{"type": "EventFacade", "name": "event", "description": " An Event Facade object with the following specific property added:\n<dl>\n<dt>left</dt><dd>The current X position of the crop area relative to the base image.</dd>\n<dt>top</dt><dd>The current Y position of the crop area relative to the base image.</dd>\n<dt>width</dt><dd>The new width of the crop area.</dd>\n<dt>height</dt><dd>The new height of the crop area.</dd>\n</dl>"}], "description": "Fires at the start of a crop operation. Unifies drag:start and and resize:start."}, "crop:crop": {"type": "{CustomEvent}", "params": [{"type": "EventFacade", "name": "event", "description": " An Event Facade object with the following specific property added:\n<dl>\n<dt>left</dt><dd>The current X position of the crop area relative to the base image.</dd>\n<dt>top</dt><dd>The current Y position of the crop area relative to the base image.</dd>\n<dt>width</dt><dd>The new width of the crop area.</dd>\n<dt>height</dt><dd>The new height of the crop area.</dd>\n</dl>"}], "description": "Fires every time the crop area changes. Unifies drag:drag and resize:resize."}, "useKeysChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "useKeysChange", "description": "Fires when the value for the configuration attribute 'useKeys' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "crop:end": {"type": "{CustomEvent}", "params": [{"type": "EventFacade", "name": "event", "description": " An Event Facade object with the following specific property added:\n<dl>\n<dt>left</dt><dd>The current X position of the crop area relative to the base image.</dd>\n<dt>top</dt><dd>The current Y position of the crop area relative to the base image.</dd>\n<dt>width</dt><dd>The new width of the crop area.</dd>\n<dt>height</dt><dd>The new height of the crop area.</dd>\n</dl>"}], "description": "Fires at the end of a crop operation. Unifies drag:end and resize:end.", "guessedname": "eventType", "guessedtype": "property"}, "statusChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "statusChange", "description": "Fires when the value for the configuration attribute 'status' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "shiftKeyTickChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "shiftKeyTickChange", "description": "Fires when the value for the configuration attribute 'shiftKeyTick' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "initHeightChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "initHeightChange", "description": "Fires when the value for the configuration attribute 'initHeight' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "resizeKnobChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "resizeKnobChange", "description": "Fires when the value for the configuration attribute 'resizeKnob' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "keyTickChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "keyTickChange", "description": "Fires when the value for the configuration attribute 'keyTick' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "initialXYChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "initialXYChange", "description": "Fires when the value for the configuration attribute 'initialXY' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "minWidthChange": {"params": [{"type": "EventFacade", "name": "event", "description": "An EventFacade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "minWidthChange", "description": "Fires when the value for the configuration attribute 'minWidth' is changed. You can listen for the event using the <a href=\"EventTarget.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"EventTarget.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}}, "methods": {"getCropCoords": {"return": {"type": "Object", "description": "The top, left, height, width and image url of the image being cropped"}, "description": "Returns the coordinates needed to crop the image", "guessedname": "getCropCoords", "guessedtype": "function"}}, "extends": "Widget", "superclass": "Widget", "file": "gallery-imagecropper.js", "shortname": "ImageCropper", "properties": {"ImageCropper.ATTRS": {"description": "Static property used to define the default attribute configuration of\nthe Widget.", "protected": "", "static": "", "guessedname": "ATTRS", "guessedtype": "property", "type": "{Object}"}, "ImageCropper.RESIZE_KNOB_TEMPLATE": {"description": "Template that will contain the ImageCropper's resize node.", "default": "&lt;div class=\"[...-resize-knob]\" tabindex=\"0\">&lt;/div>", "protected": "", "guessedname": "RESIZE_KNOB_TEMPLATE", "guessedtype": "property", "type": "{HTML}"}, "ImageCropper.RESIZE_EVENTS": {"description": "Array of events to relay from the Resize utility to the ImageCropper", "private": "", "static": "", "guessedname": "RESIZE_EVENTS", "guessedtype": "property", "type": "{Array}"}, "ImageCropper.DRAG_EVENTS": {"description": "Array of events to relay from the Drag utility to the ImageCropper", "private": "", "static": "", "guessedname": "DRAG_EVENTS", "guessedtype": "property", "type": "{Array}"}, "ImageCropper.NAME": {"description": "The identity of the widget.", "default": "'imagecropper'", "readonly": "", "protected": "", "static": "", "guessedname": "ImageCropper", "guessedtype": "property", "type": "String"}, "ImageCropper.RESIZE_ATTRS": {"description": "Array of attributes to relay from the ImageCropper to the Resize utility", "private": "", "static": "", "guessedname": "RESIZE_ATTRS", "guessedtype": "property", "type": "{Array}"}, "ImageCropper.CROP_MASK_TEMPLATE": {"description": "Template that will contain the ImageCropper's mask.", "default": "&lt;div class=\"[...-mask]\">&lt;/div>", "protected": "", "guessedname": "CROP_MASK_TEMPLATE", "guessedtype": "property", "type": "{HTML}"}, "ImageCropper.RESIZE_MASK_TEMPLATE": {"description": "Template that will contain the ImageCropper's resize mask.", "default": "&lt;div class=\"[...-resize-mask]\">&lt;/div>", "protected": "", "guessedname": "RESIZE_MASK_TEMPLATE", "guessedtype": "property", "type": "{HTML}"}}, "description": "<p>Creates a Image Cropper control.</p>"}}, "version": "1.0.0", "modules": {"imagecropper": {"description": "<p>Creates a Image Cropper control.</p>", "submodules": [], "classlist": ["ImageCropper"], "filelist": ["gallery-imagecropper.js"], "subdata": {}, "guessedname": "Lang", "guessedtype": "property", "requires": "widget, resize, gallery-event-arrow", "name": "imagecropper"}}, "filemap": {"gallery-imagecropper.js": {"classlist": ["ImageCropper"], "name": "gallery-imagecropper.js", "module": "imagecropper"}}}